{"version":3,"sources":["views/app-views/machine-and-sensor/index.js"],"names":["MachineAndSensor","history","useHistory","data","setData","useState","loading","setLoading","useEffect","fetchData","async","health","arguments","length","undefined","overall","params","push","url","join","response","axiosInstance","get","localStorage","getItem","status","responseData","items","Array","isArray","console","error","getMenu","record","_jsxs","Menu","children","Item","onClick","id","_jsx","EyeOutlined","hasPermission","EditOutlined","Popconfirm","title","description","okText","cancelText","onConfirm","log","delete","message","success","prevData","filter","item","_error$response","_error$response$data","deleteRow","style","display","gap","alignItems","DeleteOutlined","columns","dataIndex","key","render","text","name","jobsite_name","row","_Fragment","moment","format","Tag","color","Space","size","Dropdown","overlay","placement","trigger","MoreOutlined","selectedStatus","setSelectedStatus","overallStatus","setOverallStatus","SubMenu","Checkbox","ToolOutlined","className","direction","Input","placeholder","allowClear","onChange","onSearch","width","prefix","SearchOutlined","marginRight","Button","icon","Icon","component","CsvIcon","Link","to","Table","dataSource"],"mappings":"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","file":"static/js/57.fd609a24.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Table,\r\n  Space,\r\n  Avatar,\r\n  Dropdown,\r\n  Menu,\r\n  Input,\r\n  Button,\r\n  Popconfirm,\r\n  message,\r\n  Select,\r\n  Card,\r\n  Empty,\r\n  Checkbox,\r\n  Tag,\r\n} from \"antd\";\r\nimport {\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  EyeOutlined,\r\n  MoreOutlined,\r\n  SearchOutlined,\r\n  ToolOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { CsvIcon } from \"assets/svg/icon\";\r\nimport Icon from \"@ant-design/icons/lib/components/Icon\";\r\nimport { Link } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom\";\r\nimport { axiosInstance } from \"App\";\r\nimport moment from \"moment\";\r\nimport SubMenu from \"antd/lib/menu/SubMenu\";\r\nimport { hasPermission } from 'utils/permissionUtils';\r\n\r\nconst MachineAndSensor = () => {\r\n  const history = useHistory();\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n\r\n\r\n    fetchData();\r\n  }, []);\r\n  const fetchData = async (health = \"\", overall = \"\") => {\r\n    let params = [];\r\n\r\n    if (health !== \"\" && health !== \"all\") {\r\n      params.push(`health=${health}`);\r\n    }\r\n\r\n    if (overall !== \"\" && overall !== \"all\") {\r\n      params.push(`machine_status=${overall}`);\r\n    }\r\n\r\n\r\n    let url = params.length ? `&${params.join(\"&\")}` : \"\";\r\n    try {\r\n      setLoading(true);\r\n      const response = await axiosInstance.get(`api/web/machines?customer_id=${localStorage.getItem(\"parent_id\")!=\"null\"? localStorage.getItem(\"parent_id\"):localStorage.getItem(\"user_id\")}${url}`);\r\n      if (response.status === 200) {\r\n        const responseData = response.data.items;\r\n        if (Array.isArray(responseData)) {\r\n          setData(responseData);\r\n          setLoading(false);\r\n        } else {\r\n          console.error(\"Unexpected response format:\", responseData);\r\n        }\r\n        // console.log(JSON.stringify(responseData));\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const deleteRow = async (id) => {\r\n    console.log(id);\r\n    try {\r\n      const response = await axiosInstance.delete(\r\n        `api/web/machines/${id}`\r\n      );\r\n      if (response.status === 200) {\r\n        message.success(\"Machine deleted successfully\");\r\n        setData((prevData) => prevData.filter((item) => item.id !== id));\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting row:\", error);\r\n      message.error(error.response?.data?.message || \"Error deleting machine. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const getMenu = (record) => (\r\n    <Menu>\r\n      <Menu.Item\r\n        key=\"edit\"\r\n        onClick={() =>\r\n          history.push(`/app/machine-and-sensors/machine-details/${record.id}`)\r\n        }\r\n      >\r\n        <EyeOutlined /> View Details\r\n      </Menu.Item>\r\n      <Menu.Item\r\n        key=\"viewSensors\"\r\n        onClick={() =>\r\n          history.push(`/app/machine-and-sensors/sensor-list/${record.id}`)\r\n        }\r\n      >\r\n        <EyeOutlined /> View Sensors\r\n      </Menu.Item>\r\n      {hasPermission('machines_and_sensors', 'Edit Machines and Sensors') && (\r\n        <Menu.Item\r\n          key=\"edit-machine\"\r\n          onClick={() =>\r\n            history.push(`/app/machine-and-sensors/edit/${record.id}`)\r\n          }\r\n        >\r\n          <EditOutlined /> Edit Details\r\n        </Menu.Item>\r\n      )}\r\n      {hasPermission('machines_and_sensors', 'Delete Machines and Sensors') && (\r\n        <Popconfirm\r\n          title={\"Are you sure you want to delete this item?\"}\r\n          description={\"This action cannot be undone.\"}\r\n          okText=\"Yes\"\r\n          cancelText=\"No\"\r\n          onConfirm={() => deleteRow(record.id)}\r\n        >\r\n          <Menu.Item key=\"delete\">\r\n            <span style={{ display: \"flex\", gap: \"8px\", alignItems: \"center\" }}>\r\n              <DeleteOutlined /> Delete\r\n            </span>\r\n          </Menu.Item>\r\n        </Popconfirm>\r\n      )}\r\n    </Menu>\r\n  );\r\n\r\n  const columns = [\r\n    {\r\n      title: \"ID\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n    },\r\n    {\r\n      title: \"Customer\",\r\n      dataIndex: \"user\",\r\n      key: \"name\",\r\n      render: (text, record) => (\r\n        text?.name || \"N/A\"\r\n      )\r\n    },\r\n    {\r\n      title: \"Jobsite\",\r\n      dataIndex: \"job_site\",\r\n      key: \"Jobsite\",\r\n      render: (text, record) => (\r\n        text?.jobsite_name || \"N/A\"\r\n      )\r\n    },\r\n    {\r\n      title: \"Machines\",\r\n      dataIndex: \"name\",\r\n      key: \"machine_detail\",\r\n    },\r\n    {\r\n      title: \"Active Since\",\r\n      dataIndex: \"created_at\",\r\n      key: \"created_at\",\r\n      render: (row) => {\r\n        return <>{moment(row).format(\"DD-MM-YYYY, h:mm a\")}</>;\r\n      },\r\n    },\r\n    {\r\n      title: \"Machine Status\",\r\n      dataIndex: \"machine_status\",\r\n      key: \"machine_status\",\r\n      render: (text) => (\r\n        text ?\r\n          <Tag color=\"green\">Active</Tag> :\r\n          <Tag color=\"red\">Inactive</Tag>\r\n      )\r\n    },\r\n    {\r\n      title: \"Overall Status\",\r\n      dataIndex: \"health\",\r\n      key: \"health\",\r\n      render: (text) => {\r\n        if (text <= 10 && text >= 8) {\r\n          return <Tag color=\"green\">Good</Tag>\r\n        } else if (text <= 7 && text >= 6) {\r\n          return <Tag color=\"yellow\">Satisfactory</Tag>\r\n        } else if (text <= 5 && text >= 3) {\r\n          return <Tag color=\"orange\">Warning</Tag>\r\n        } else {\r\n          return <Tag color=\"red\">Critical</Tag>\r\n\r\n        }\r\n      }\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <Dropdown\r\n            overlay={getMenu(record)}\r\n            placement=\"bottomRight\"\r\n            trigger={[\"hover\"]}\r\n          >\r\n            <MoreOutlined />\r\n          </Dropdown>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const [selectedStatus, setSelectedStatus] = useState(\"all\");\r\n  const [overallStatus, setOverallStatus] = useState(\"all\");\r\n\r\n  const FilterMenu = (\r\n    <Menu mode=\"horizontal\">\r\n      {/* Status Filter */}\r\n      <SubMenu key=\"status\" title=\"Health Status\">\r\n        <Menu.Item key=\"status-all\">\r\n          <Checkbox\r\n            checked={selectedStatus === 'all'}\r\n            onChange={() => {\r\n              setSelectedStatus('all');\r\n              fetchData(\"all\", overallStatus);\r\n            }}\r\n          >\r\n            All\r\n          </Checkbox>\r\n        </Menu.Item>\r\n        {/* Satisfactory, Warning ya Critical */}\r\n        <Menu.Item key=\"status-good\">\r\n          <Checkbox\r\n            checked={selectedStatus === 'Good'}\r\n            onChange={() => {\r\n              setSelectedStatus('Good');\r\n              fetchData('Good', overallStatus);\r\n            }}\r\n          >\r\n            Good\r\n          </Checkbox>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"status-satisfactory\">\r\n          <Checkbox\r\n            checked={selectedStatus === 'Satisfactory'}\r\n            onChange={() => {\r\n              setSelectedStatus('Satisfactory');\r\n              fetchData('Satisfactory', overallStatus);\r\n            }}\r\n          >\r\n            Satisfactory\r\n          </Checkbox>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"status-warning\">\r\n          <Checkbox\r\n            checked={selectedStatus === 'Warning'}\r\n            onChange={() => {\r\n              setSelectedStatus('Warning');\r\n              fetchData('Warning', overallStatus);\r\n            }}\r\n          >\r\n            Warning\r\n          </Checkbox>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"status-critical\">\r\n          <Checkbox\r\n            checked={selectedStatus === 'Critical'}\r\n            onChange={() => {\r\n              setSelectedStatus('Critical');\r\n              fetchData('Critical', overallStatus);\r\n            }}\r\n          >\r\n            Critical\r\n          </Checkbox>\r\n        </Menu.Item>\r\n      </SubMenu>\r\n\r\n      {/* Overall Status Filter */}\r\n      <SubMenu key=\"overall\" title=\"Overall Status\">\r\n        <Menu.Item key=\"overall-all\">\r\n          <Checkbox\r\n            checked={overallStatus === 'all'}\r\n            onChange={() => {\r\n              setOverallStatus('all');\r\n              fetchData(selectedStatus, 'all');\r\n            }}\r\n          >\r\n            All\r\n          </Checkbox>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"overall-active\">\r\n          <Checkbox\r\n            checked={overallStatus === '1'}\r\n            onChange={() => {\r\n              setOverallStatus('1');\r\n              fetchData(selectedStatus, '1');\r\n            }}\r\n          >\r\n            Active\r\n          </Checkbox>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"overall-inactive\">\r\n          <Checkbox\r\n            checked={overallStatus === '0'}\r\n            onChange={() => {\r\n              setOverallStatus('0');\r\n              fetchData(selectedStatus, '0');\r\n            }}\r\n          >\r\n            Inactive\r\n          </Checkbox>\r\n        </Menu.Item>\r\n\r\n      </SubMenu>\r\n            \r\n    </Menu>\r\n  );\r\n  return (\r\n    <div>\r\n      <h4>\r\n        <ToolOutlined /> Machine & Sensors\r\n      </h4>\r\n      <div className=\"d-flex justify-content-between mb-3\">\r\n        <div style={{ display: \"flex\" }}>\r\n          <Space direction=\"vertical\">\r\n            <Input\r\n              placeholder=\"Search\"\r\n              allowClear\r\n              onChange={(onSearch) => {}}\r\n              style={{ width: 200 }}\r\n              prefix={<SearchOutlined style={{ marginRight: 8 }} />}\r\n            />\r\n          </Space>\r\n          <Button\r\n            icon={<Icon component={CsvIcon} />}\r\n            className=\"d-flex align-items-center ml-2\"\r\n          >\r\n            Export\r\n          </Button>\r\n          {/* <Select placeholder=\"Select Area\" style={{ width: 200,margin:\"0 10px\" }} />\r\n          <Select placeholder=\"Select Jobsite\" style={{ width: 200 }} /> */}\r\n        </div>\r\n        {hasPermission('machines_and_sensors', 'Create New Machines and Sensors') && (\r\n          <div className=\"mb-2 d-flex align-items-center\">\r\n            <Button className=\"ml-3 bg-primary d-flex align-items-center rounded text-white font-weight-semibold px-4\">\r\n              <Link to={\"machine-and-sensors/add-new\"}>+ Add New Machines</Link>\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <Table loading={loading} dataSource={data} columns={columns} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MachineAndSensor;\r\n"],"sourceRoot":""}